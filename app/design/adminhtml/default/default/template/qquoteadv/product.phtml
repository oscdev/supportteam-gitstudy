<?php
/**
 *
 * CART2QUOTE CONFIDENTIAL
 * __________________
 *
 *  [2009] - [2016] Cart2Quote B.V.
 *  All Rights Reserved.
 *
 * NOTICE OF LICENSE
 *
 * All information contained herein is, and remains
 * the property of Cart2Quote B.V. and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Cart2Quote B.V.
 * and its suppliers and may be covered by European and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Cart2Quote B.V.
 *
 * @category    Ophirah
 * @package     Qquoteadv
 * @copyright   Copyright (c) 2016 Cart2Quote B.V. (https://www.cart2quote.com)
 * @license     https://www.cart2quote.com/ordering-licenses(https://www.cart2quote.com)
 */
?>
<div style="" id="quotes_tabs_form_product_content">
    <div class="entry-edit profile-generator" id="profile-generator">
        <div id="__fieldmapping">

            <?php
            // Quote as model
            // New quote data for this template
            $quoteModel = $this->getQuoteModel();
            Mage::helper('catalog/product')->setSkipSaleableCheck(true);

            //check if datainput should be locked
            $status = $quoteModel->getData('status');
            if (intval($status) >= 50) {
                $inputDisabled = true;
                $disabledHtml = "readonly";
                $disabledHtmlRadio = "disabled";
                $disabledOnClick = "
                        if (confirm('This quote is already send to the customer, would you like to edit it?')) {
                            edit();
                        } else {
                            //Do nothing
                        }
                ";
            } else {
                $inputDisabled = false;
                $disabledHtml = "";
                $disabledHtmlRadio = "";
                $disabledOnClick = "";
            }

            Mage::getSingleton("core/session")->setCollectTotals(0);
            $customer = $this->getCustomer($quoteModel->getCustomerId());
            $helper = Mage::helper('qquoteadv');
            $createHash = $this->getHash();

            // Setting model with totals
            $_qTotals = $this->getQuoteTotalsModel();
            $_quoteTotalItems = array();

            if (Mage::helper('tax')->priceIncludesTax($quoteModel->getStore())) {
                $customPriceNote = $helper->__("Enter custom price including default tax");
            } else {
                $customPriceNote = $helper->__("Enter custom price excluding tax");
            }

            $costPriceNote = $helper->__("Profit is based on entered cost prices");

            ?>
            <input id="redirect2neworder" name="redirect2neworder" type="hidden" value="0">
            <?php
            // Adding trail hash to form
            if (is_array($createHash)) {
                foreach ($createHash as $k => $v) {
                    echo '<input id="createHash" name="createHash[' . $k . ']" type="hidden" value="' . $v . '">';
                }
            }

            $btnEditProducts = $this->getLayout()->createBlock('adminhtml/widget_button');
            $btnEditProducts->setLabel($this->__('Edit products'));

            // checkRadio will be DEPRECATED
            $onclick = "if(isCheckRadio()){ $('redirect2neworder').value=1; $('loading-mask').show(); save(); }else{ return false;}";

            if ($inputDisabled) {
                $btnEditProducts->setClass('add disabled');
                $btnEditProducts->setOnclick($disabledOnClick);
            } else {
                $btnEditProducts->setClass('add');
                $btnEditProducts->setOnclick($onclick);
            }

            ?>

            <div style="" id="sales_order_view_tabs_order_info_content">
                <div>
                    <div class="box-left">
                        <!-- Quote Information -->
                        <?php include('details/quote_information.phtml') ?>
                        <!-- General Request Information -->
                        <?php include('details/general_request_information.phtml') ?>
                        <!-- Custom Quote fields -->
                        <?php echo $this->getChildHtml('quoteExtraFields'); ?>
                    </div>
                    <div class="box-right">
                        <!-- Account Information -->
                        <?php include('details/account_information.phtml') ?>
                        <!-- Linked Orders -->
                        <?php include('details/linked_orders.phtml') ?>
                        <!-- Billing Information -->
                        <?php include('details/billing_information.phtml') ?>
                        <!-- Shipping Information -->
                        <?php include('details/shipping_information.phtml') ?>
                    </div>
                    <div class="clear"></div>
                </div>
            </div>

            <a name="products" style="position: absolute; margin-top: -50px;"></a>
            <div class="entry-edit-head">
                <h4 class="icon-head head-edit-form fieldset-legend"><?php echo Mage::helper('catalog')->__('Product Information') ?></h4>

                <div style="float:right; margin:3px;">
                    <?php echo $this->getChildHtml('fakepro.button'); ?>
                    <?php print '&nbsp;&nbsp;' . $btnEditProducts->_toHtml(); ?>
                </div>
            </div>

            <!--<div class="fieldset">-->
            <div class="hor-scroll">
                <!--<fieldset style="padding: 0px;">-->
                <div class="fieldset" style="padding: 0;">
                    <legend><?php echo Mage::helper('catalog')->__('Product Information') ?></legend>
                    <div class="grid np">
                        <div class="hor-scroll">
                            <table id='qquoteadv_product_table' cellspacing="0" class="data order-tables" border=1>

                                <thead>
                                <tr class="headings">
                                    <th class="a-center" width="2%"><?php echo Mage::helper('sales')->__('Sku') ?></th>
                                    <th width="25%"><?php echo Mage::helper('sales')->__('Product Name') ?></th>
                                    <th class="a-center" width="20%"><?php echo $this->__('Comment with Product') ?></th>
                                    <th class="a-center" width="4%"><?php echo $this->__('Cost Price') ?></th>
                                    <th class="a-center" width="4%"><?php echo Mage::helper('sales')->__('Original Price') ?></th>
                                    <th class="a-center" width="4%" style="min-width:120px;"><?php echo $this->__('Price') . "*" ?></th>
                                    <th class="a-center" width="4%"><?php echo Mage::helper('sales')->__('Qty') ?></th>
                                    <th class="a-center" width="4%"><?php echo $this->__('Row Total') ?></th>
                                    <th class="a-center" width="4%"><?php echo $this->__('Margin (GP)') ?></th>
                                </tr>
                                </thead>

                                <tbody class="even">
                                <?php
                                $q2qKey = 0;
                                $itemCount = 0;
                                foreach ($this->getProductData() as $item): // START $ITEM
                                    $product = $this->getProductInfo($item->getProductId());

                                    //get product options
                                    if ($product->getTypeId() == Mage_Catalog_Model_Product_Type::TYPE_BUNDLE){
                                        $productOptions = $this->getBundleOptionsHtml($product, $item);
                                    } elseif ($product->isConfigurable()
                                        || $product->getTypeId() == Mage_Catalog_Model_Product_Type::TYPE_SIMPLE
                                        || $product->getTypeId() == Mage_Catalog_Model_Product_Type::TYPE_VIRTUAL) {
                                        $productOptions = $this->getProductOptionsHtml($product, $item);
                                    } elseif(Mage::getModel('qquoteadv/qqadvproductdownloadable')->isDownloadable($product)) {
                                        $productOptions = $this->getDownloadableOptions($item);
                                    } else {
                                        $productOptions = '';
                                    }

                                    $productUrl = Mage::helper("adminhtml")->getUrl("adminhtml/catalog_product/edit/", array("id" => $item->getProductId()));
                                    $collection = $this->getRequestedProductData($item->getId(), $quoteModel);
                                    // Todo: refactor getQtyHtml to smaller functions
                                    $qtyHtml = $this->getQtyHtml($collection, $disabledHtmlRadio, $inputDisabled, $product, $q2qKey, $disabledHtml, $_qTotals);
                                    $prices = $qtyHtml['prices'];
                                    $margins = $qtyHtml['margins'];
                                    $customPriceLineHtml = $qtyHtml['customPriceLineHtml'];
                                    $hideRadio = $qtyHtml['hideRadio'];
                                    $rowTotalLine = $qtyHtml['rowTotalLine'];
                                    $costPriceHtml = $this->getCostHtml($collection, $product, $_qTotals, $item);
                                    $_quoteItems[$item->getId()]['totalCost'] = $this->getQuoteItemValue($item->getId(), 'totalCost');

                                    //Todo: refactor multiple request for requested item
                                    if (count($collection) > 0) {
                                        foreach ($collection as $requested_item) {
                                            $this->setRequestedItem($requested_item);
                                        }
                                    }
                                    $requested_item = $this->getRequestedItem();

                                    if (isset($requested_item) and is_object($requested_item)) {

                                        //$price = Mage::helper('qquoteadv')->_applyPrice($requested_item->getQuoteadvProductId(), strip_tags($qty), $currency);
                                        $price = $requested_item->getOriginalCurPrice();

                                        if ($product->getTypeId() == Mage_Catalog_Model_Product_Type::TYPE_BUNDLE) {
                                            if ($price == 0) {
                                                $bundleDynamic = Mage::helper('catalog')->__('Unsupported product type "%s".', Mage_Catalog_Model_Product_Type::TYPE_BUNDLE);
                                                unset($bundleDynamic);
                                                //TODO: remove check
                                                //this is supported by now, but we keep this code around
                                                //for a couple of releases so our customers can adjust there customisations
                                            }
                                        }
                                    }

                                    // Adding to total information
                                    if (isset($price)) {
                                        $_quoteItems[$item->getId()]['totalOrgprice'] = $price;
                                    } else {
                                        $_quoteItems[$item->getId()]['totalOrgprice'] = 0;
                                    }

                                    if (count($customPriceLineHtml)) {
                                        // Setting requested qty for product in totals
                                        $_quoteItems[$item->getId()]['totalQty'] = $item->getData('qty');
                                        $_qTotals->setTotalQty($_qTotals->getTotalQty() + $item->getData('qty'));
                                        if (isset($_quoteItems[$item->getId()]['totalCost'])) {
                                            $_qTotals->setTotalCost($_qTotals->getTotalCost() + ($item->getData('qty') * $_quoteItems[$item->getId()]['totalCost']));
                                        }

                                        $_qTotals->setTotalOrgcost($_qTotals->getTotalOrgcost() + ($item->getData('qty') * $_quoteItems[$item->getId()]['totalOrgprice']));
                                    }
                                    ?>
                                    <tr class="border">
                                        <td>
                                            <?php echo $product->getSku(); ?>
                                        </td>
                                        <td>
                                            <div>
                                                <div class="item-text">
                                                    <!-- START TITLE -->
                                                    <h5 class="title"><a href="<?php echo $productUrl; ?>"><?php echo $product->getName() ?></a>
                                                        <?php echo $this->getOutOfStockError($product); ?>
                                                        <?php echo $this->getProductStatsError($product); ?>
                                                    </h5>
                                                    <!-- END TITLE -->
                                                    <!-- START OPTIONS -->
                                                    <?php echo $productOptions; ?>
                                                    <!-- END OPTIONS -->
                                                </div>
                                            </div>
                                        </td>
                                        <!-- QUOTE COMMENT START -->
                                        <td class="a-center">
            <textarea name="requestedproduct[<?php echo $item->getId() ?>][client_request]"
                      rows="4"
                      style="width:95%;" <?php echo $disabledHtml; ?>
                ><?php echo $this->htmlEscape($item->getClientRequest()); ?></textarea>
                                        </td>
                                        <!-- QUOTE COMMENT END -->
                                        <!-- COST PRICE START -->
                                        <td class="a-right">
            <span class="price price-cost" id="cost-<?php echo $product->getSku() ?>">
                <?php echo $costPriceHtml; ?>
             </span>
                                        </td>
                                        <!-- COST PRICE END -->
                                        <!-- ORIGINAL PRICE START -->
                                        <td class="a-right">
            <span class="price price-original" id="price-<?php echo $product->getSku() ?>">
                <?php
                if (isset($requested_item) and is_object($requested_item)) {
                    //set currency code
                    echo Mage::app()->getStore($_qTotals->getQuoteStore())->formatPrice($price);
                }
                ?>
            </span>
                                        </td>
                                        <!-- ORIGINAL PRICE END -->
                                        <!-- QUOTE PRICE START -->
                                        <?php $tierMatch = false;
                                        if (count($customPriceLineHtml)): ?>
                                            <?php foreach ($customPriceLineHtml as $key => $value): ?>
                                                <?php
                                                // check if requested qty matches tier options
                                                if ($value == $requested_item->getRequestQty()) {
                                                    $tierMatch = true;
                                                }
                                                ?>
                                            <?php endforeach; ?>
                                        <?php endif; ?>
                                        <td <?php if ($hideRadio): ?>class="a-left" <?php else: ?>class="a-center" <?php endif; ?> onclick="updateTotal()">

                                            <?php if (isset($bundleDynamic)): // Show message for Bundle products with Dynamic pricing?>
                                                <div style="height:25px;"><?php echo $bundleDynamic; ?></div>
                                            <?php else: ?>
                                                <?php if (count($prices)) ?>
                                                <?php foreach ($prices as $key => $value): ?>
                                                    <?php
                                                    // Radio button is selected for the requested product qty

                                                    if ($hideRadio) {
                                                        if (($item->getData('qty') === $value['req_qty'] || count($prices) == 1) && $tierMatch == false) {
                                                            $state = $value['selected'];
                                                            if ($item->getData('qty') == $value['req_qty'] || $tierMatch === true) {
                                                                // Setting price for product in totals
                                                                $_quoteItems[$item->getId()]['totalQuoteprice'] = $value['quotePrice'];
                                                                $productQty = $_quoteItems[$item->getId()]['totalQty'];
                                                                $productPrice = $value['quotePrice'];
                                                                $totalItemPrice = ($productQty * $productPrice);
                                                                $_qTotals->setTotalQuotecost($_qTotals->getTotalQuotecost() + $totalItemPrice);
                                                            }
                                                            $tierMatch = true;

                                                        } else {
                                                            $state = $value['unselected'];
                                                        }
                                                    } else {
                                                        $state = "";
                                                        // Setting price for product in totals
                                                        $_quoteItems[$item->getId()]['totalQuoteprice'] = $value['quotePrice'];
                                                        $_qTotals->setTotalQuotecost($_qTotals->getTotalQuotecost() + ($_quoteItems[$item->getId()]['totalQty'] * $value['quotePrice']));
                                                    }
                                                    ?>
                                                    <div style="height:25px;"><?php echo $state . $value['value']; ?></div>

                                                <?php endforeach; ?>

                                            <?php endif; ?>
                                        </td>
                                        <!-- QUOTE PRICE END -->
                                        <td class="a-right">
                                            <?php $tierMatch = false;
                                            if (count($customPriceLineHtml)): ?>
                                                <?php foreach ($customPriceLineHtml as $key => $value): ?>
                                                    <div style="height:25px;"><?php echo $value; ?></div>
                                                <?php endforeach; ?>
                                                <a href="#"
                                                   onclick="typeQty('<?php echo $item->getData('id') ?>')"><?php echo Mage::helper('sales')->__('Add') ?></a>
                                            <?php endif; ?>
                                        </td>
                                        <td class="a-right">
                                            <?php foreach ($rowTotalLine as $rowTotal): ?>
                                                <?php echo $rowTotal; ?>
                                            <?php endforeach; ?>
                                        </td>
                                        <td class="a-right last">
                                            <?php foreach ($margins as $marginLine): ?>
                                                <?php echo $marginLine; ?>
                                            <?php endforeach; ?>
                                        </td>
                                    </tr>
                                    <?php
                                    $q2qKey++;
                                    $itemCount++;

                                    /* @var Ophirah_Qquoteadv_Model_Quotetotal */
                                    $_qTotals->setTotalItems($_quoteItems);

                                    ?>
                                <?php endforeach; // END $ITEM ?>
                                </tbody>

                                <tfoot>
                                    <tr>
                                        <td class="a-left" colspan="2">
                                            <?php echo $this->helper('sales')->__('Total %d product(s)', $itemCount); ?></td>
                                        <td class="a-right">
                                            <?php echo $this->helper('sales')->__('Subtotal:') ?></td>
                                        <td class="a-right">
                                            <strong><?php echo Mage::app()->getStore($_qTotals->getQuoteStore())->formatPrice($_qTotals->getTotalCost()); ?></strong>
                                        </td>
                                        <td class="a-right">
                                            <strong><?php echo Mage::app()->getStore($_qTotals->getQuoteStore())->formatPrice($_qTotals->getTotalOrgcost()); ?></strong>
                                        </td>
                                        <td class="a-right">
                                            --
                                        </td>
                                        <td class="a-right">
                                            <strong><?php echo $_qTotals->getTotalQty(); ?></strong>
                                        </td>
                                        <td class="a-right">
                                            <strong><?php echo Mage::app()->getStore($_qTotals->getQuoteStore())->formatPrice($_qTotals->getTotalQuotecost()); ?></strong>
                                        </td>
                                        <td class="a-right last">
                                            <?php echo $_qTotals->getTotalGPMarginCalculated(); ?>
                                        </td>

                                        <?php
                                        // check for salesrules
                                        if ($quoteModel->getData('salesrule') > 0) {
                                            $salesruleId = $quoteModel->getData('salesrule');
                                        } else {
                                            $salesruleId = false;
                                        }
                                        // apply salesrul and calculate Quote totals
                                        $_qTotals->applyDiscount($salesruleId, $_qTotals->getTotalQuotecost());
                                        $_qTotals->setBasicQuoteTotals();
                                        $_qTotals->updateTotals($quoteModel->getData('salesrule'));
                                        $_qTotals->setCollectedTotals($quoteModel->getTotalsArray(true));
                                        $quoteModel->setQuoteTotals($_qTotals->getTotalQuoteTotal());
                                        ?>
                                    </tr>
                                </tfoot>

                            </table>
                        </div>
                        <?php

                        ?>
                    </div>
                </div>
                <!--    </fieldset>-->
            </div>

            <div class="item_barBottom">
                <small class="custom_note">
                    <?php echo " * - " . $customPriceNote; ?>
                </small>

                <div id="updateButton">
                    <div class="a-right" id="btn_updateGrey">
                        <?php echo $this->getUpdateTotalButton('disabled', 'return false;')->_toHtml(); ?>
                    </div>
                    <div class="a-right" id="btn_updateTotal" style="display: none;">
                        <?php
                        if (!$inputDisabled) {
                            echo $this->getUpdateTotalButton()->_toHtml();
                        } else {
                            echo $this->getUpdateTotalButton('disabled', $disabledOnClick)->_toHtml();
                        }
                        ?>
                    </div>
                </div>

            </div>
        </div>

        <form id="frmPromt" action="<?php echo $this->getUrl('*/*/addQtyField') ?>">
            <input type="hidden" name="request_qty" id="request_qty"/>
            <input type="hidden" name="quote_product_id" id="quote_product_id"/>
            <input type="hidden" name="quoteadv_id" id="quoteadv_id"
                   value="<?php echo $this->getRequest()->getParam('id'); ?>"/>
        </form>

        <script>
            function updateTotal() {
                $('btn_updateTotal').show();
                $('btn_updateGrey').hide();
            }

            function typeQty(quote_product_id) {
                var msg = "<?php echo $this->__("Add new Qty").' '.$this->__('(unsaved changes to the quote will be lost)'); ?>";
                var qty = prompt(msg, "1");
                if (qty != null && qty != "") {
                    $('quote_product_id').value = quote_product_id;
                    $('request_qty').value = qty;
                    $('frmPromt').submit();
                    $('loading-mask').show();
                } else {
                    $('quote_product_id').value = '';
                    $('request_qty').value = '';

                    return false;
                }
            }

            function parsePrice(price) {
                // Replace none integers from string with ''
                price = price.replace(/^\D+/g, '');
                price = price.replace(/\s+/g, '');
                price = price.replace(/\D+$/g, '');
                price = price.trim();

                if (price.substr(price.length - 3, 1) == ',') {
                    price = price.replace(/\./g, '');
                    price = price.replace(/\,/g, '.');
                }
                else if (price.substr(price.length - 3, 1) == '.') {
                    price = price.replace(/\,/g, '')
                }

                return parseFloat(price);
            }

            Element.addMethods({
                getInnerText: function (element) {
                    element = $(element);
                    return element.textContent && !window.opera ? element.textContent
                        : element.innerHTML.stripScripts().unescapeHTML().replace(/[\n\r\s]+/g, ' ');
                }
            });

            document.observe("dom:loaded", function () {
                // initially hide all containers for tab content
                $$('.proposalprice').each(function (element) {

                    var parentTable = element.up('tr');
                    var costElement = parentTable.down('.price-cost > #price-cost-' + element.id.substr(6) + ' .price');
                    var originalElement = parentTable.down('.price-original');

                    if(typeof costElement != 'undefined'){
                        var originalPrice = parsePrice(costElement.getInnerText());

                        if (isNaN(originalPrice) || Math.round(originalPrice * 100) == 0) {
                            originalPrice = parsePrice(originalElement.getInnerText());
                        }

                        var marginElement = $('margin-' + element.id.substr(6));
                        var calculate = function () {
                            newPrice = $F(element).replace(/\,/g, '.');
                            newPrice = parseFloat(newPrice);

                            // Formula for Gross profit [Default]
                            var marginFinal = Math.round(((newPrice - originalPrice) / newPrice ) * 100);
                            if (isNaN(marginFinal)) {
                                marginFinal = 0;
                            }
                            marginElement.update(marginFinal + ' %');
                        };

                        //extra function to make sure the update totals button is active after un-focus
                        setProposalInputLissener();

                        element.observe('keyup', calculate);
                        calculate();
                    }

                });
            });

            /**
             * Function to make sure the update totals button is active after un-focus of input '.proposalprice'
             */
            function setProposalInputLissener(){
                $$('.proposalprice').each(function(element) {
                    element.observe('blur', function(e){
                        updateTotal();
                    });
                });
            }


        </script>

        <?php
        /*  ============================
         *  CRM MODULE EDITED CODE START
         *  ============================
         */
        // Check for Cart2Quote CRMaddon module and if enabled
        (Mage::getStoreConfig('qquoteadv_sales_representatives/messaging/enabled') == 1) ? $crmaddon = true : $crmaddon = false;
        // Check for module disabled
        if(!Mage::helper('core')->isModuleEnabled('Ophirah_Crmaddon')) {
            $crmaddon = false;
        }
        ?>
        <div>
            <div class="box-left">
                <!--File upload section-->
                <?php
                echo $this->getChildHtml('quoteMultiUpload');
                ?>

                <?php if ($crmaddon === true): ?>
                    <div id="crmaddon_container">
                        <div class="crmaddon_history">
                            <!-- CRM Addon section-->
                            <?php include('crmaddon/crmaddon_history.phtml'); ?>
                        </div>
                    </div>
                <?php endif; ?>
            </div>

            <div class="box-right">
                <?php
                // BETA FEATURE
                //if ($helper->betaIsEnabled($quoteModel->getData('store_id'))):
                ?>
                <!-- Shipping section -->
                <?php include('details/shipping_proposal.phtml'); ?>
                <?php //else: ?>
                <!-- Shipping section -->
                <?php //include('details/shipping_proposal_old.phtml'); ?>
                <?php //endif; // END BETA FEATURE ?>

                <div id="discount">
                    <?php include('details/discount.phtml'); ?>
                </div>

                <div>
                    <div class="entry-edit-head"><h4><?php echo Mage::helper('qquoteadv')->__('Quote Totals') ?></h4></div>
                    <div class="order-totals">
                        <?php echo $this->getChild('quote_totals')->setCollectTotals($this->needCollectTotals())->setQuote($quoteModel)->toHtml(); ?>
                        <?php echo $this->getChild('quote_buttons')->setQuote($quoteModel)->toHtml(); ?>

                        <?php //show last update date and time if quote if totals are not collected
                        if (!$this->isTotalsCollected()) {
                            $date = $this->formatDate($quoteModel->getData('updated_at'), 'medium', true);
                            echo '<br /><small>(Last Update: ' . $date . ')</small>';
                        } ?>
                    </div>
                    <small class="total_note">
                        <?php echo " * - " . $costPriceNote; ?>
                    </small>
                </div>
                <div class="clear"></div>

<!--                <div>-->
                    <?php //echo $this->getChild('quote_totals')->setQuote($quoteModel)->toHtml(); ?>
                    <!-- Quote Totals section -->
                    <?php //include('details/quote_totals.phtml'); ?>

<!--                </div>-->
            </div>
        </div>

        <?php
        /*  ============================
         *  CRM MODULE EDITED CODE END
         *  ============================
         */
        ?>
        <script>
            function showMsg() {
                msg = '<?php echo $this->__("First save this Quotation"); ?>';
                alert(msg);
            }

            function isCheckRadio() {
                checkedRadio = false;
                $$('#edit_form .rbt').each(function (item) {
                        if (item.checked == true) {
                            str = item.value;
                            if (str.length > 0) {
                                checkedRadio = true;
                                throw $break;
                            }
                        }
                    }
                );

                if (!checkedRadio) {
                    msg = '<?php echo $this->__("Select one Qty per product. (When editing this product you will be able to re-enter the extra tiers in this screen.)") ?>';
                    alert(msg);
                }
                return checkedRadio;
            }

        </script>
        <div class="clear"></div>
    </div>
</div>

<?php
Mage::helper('catalog/product')->setSkipSaleableCheck(false);
?>
